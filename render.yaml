services:
  # Zookeeper: Kafka dependency
  - type: worker
    name: zookeeper
    runtime: docker
    dockerfilePath: ./Dockerfile.zookeeper
    envVars:
      - key: ZOOKEEPER_CLIENT_PORT
        value: "2181"
      - key: ZOOKEEPER_TICK_TIME
        value: "2000"

  # Kafka: messaging service
  - type: worker
    name: kafka
    runtime: docker
    dockerfilePath: ./Dockerfile.kafka
    envVars:
      - key: KAFKA_BROKER_ID
        value: "1"
      - key: KAFKA_ZOOKEEPER_CONNECT
        value: zookeeper:2181
      - key: KAFKA_LISTENERS
        value: PLAINTEXT://0.0.0.0:9092
      - key: KAFKA_ADVERTISED_LISTENERS
        value: PLAINTEXT_INTERNAL://kafka:9092
      - key: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
        value: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - key: KAFKA_INTER_BROKER_LISTENER_NAME
        value: PLAINTEXT_INTERNAL
      - key: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
        value: "1"

  # Producer: background worker fetching news
  - type: worker
    name: producer
    runtime: docker
    dockerfilePath: ./Dockerfile
    startCommand: python news_producer.py
    envVars:
      - key: NEWSAPI_KEY
        fromSecret: news_api_key
      - key: KAFKA_URL
        value: kafka:9092

  # Spark: background worker for inference
  - type: worker
    name: spark
    runtime: docker
    dockerfilePath: ./Dockerfile
    startCommand: "spark-submit --master local[*] stream_infer.py"
    envVars:
      - key: KAFKA_URL
        value: kafka:9092

  # Dashboard: public-facing web service
  - type: web
    name: dashboard
    runtime: docker
    dockerfilePath: ./Dockerfile
    startCommand: streamlit run dashboard.py --server.port=8080 --server.address=0.0.0.0
    envVars:
      - key: KAFKA_URL
        value: kafka:9092
